[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\tomli\AppData\Local\Temp\idea6.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\tomli\AppData\Local\Temp\idea6.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.2 (Amazon.com Inc. Java 1.8.0_422)
[debug] Load.defaultLoad until apply took 94.0689ms
[debug]           Load.loadUnit: plugins took 86.2814ms
[debug]           Load.loadUnit: defsScala took 1.4466ms
[debug] [Loading] Scanning directory C:\Users\tomli\Workspace\Personal\deutsche-tl\project
[debug]             Load.loadUnit: mkEval took 6.6295ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\tomli\Workspace\Personal\deutsche-tl\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.3927 ms
[info] loading settings for project deutsche-tl-build from plugins.sbt,idea6.sbt ...
[debug]               Load.resolveProject(deutsche-tl-build) took 21.9919ms
[debug]             Load.loadTransitive: finalizeProject(Project(id deutsche-tl-build, base: C:\Users\tomli\Workspace\Personal\deutsche-tl\project, plugins: List(<none>))) took 33.1487ms
[debug] [Loading] Done in C:\Users\tomli\Workspace\Personal\deutsche-tl\project, returning: (deutsche-tl-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1408.171001ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.2301ms
[debug]         Load.loadUnit(file:/C:/Users/tomli/Workspace/Personal/deutsche-tl/project/, ...) took 1507.067801ms
[debug]       Load.apply: load took 1569.6114ms
[debug]       Load.apply: resolveProjects took 2.1104ms
[debug]       Load.apply: finalTransforms took 21.755099ms
[debug]       Load.apply: config.delegates took 2.432601ms
[debug]       Load.apply: Def.make(settings)... took 145.6497ms
[debug]       Load.apply: structureIndex took 37.7357ms
[debug]       Load.apply: mkStreams took 0.853601ms
[info] loading project definition from C:\Users\tomli\Workspace\Personal\deutsche-tl\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2649.7483ms
[debug]     Load.loadUnit: defsScala took 0.0013ms
[debug] [Loading] Scanning directory C:\Users\tomli\Workspace\Personal\deutsche-tl
[debug]       Load.loadUnit: mkEval took 0.1357ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6194 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 19.1109ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\tomli\Workspace\Personal\deutsche-tl, plugins: List(<none>))) took 21.415899ms
[debug] [Loading] Done in C:\Users\tomli\Workspace\Personal\deutsche-tl, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 624.006801ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.9072ms
[debug]   Load.loadUnit(file:/C:/Users/tomli/Workspace/Personal/deutsche-tl/, ...) took 3281.978799ms
[debug] Load.apply: load took 3307.069099ms
[debug] Load.apply: resolveProjects took 0.1255ms
[debug] Load.apply: finalTransforms took 14.597301ms
[debug] Load.apply: config.delegates took 0.4584ms
[debug] Load.apply: Def.make(settings)... took 52.2904ms
[debug] Load.apply: structureIndex took 11.820599ms
[debug] Load.apply: mkStreams took 0.0014ms
[info] set current project to deutsche-tl (in build file:/C:/Users/tomli/Workspace/Personal/deutsche-tl/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * root / idePackagePrefix
[warn]   +- C:\Users\tomli\Workspace\Personal\deutsche-tl\build.sbt:23
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
